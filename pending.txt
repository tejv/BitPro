# enum add in combo and read back
# use combobox only if enum present otherwise use textboxes use object list and then match if combo or textbox
# Add icon to application
# Use extension to differentiate between file types. spro = simple, bpro = complex, dpro = design complex pro 

# file explorer 
# Dpro name textfield
# Dpro tableview columns
sproname_t  dfName  dfCount dfDesc dfRelativePath

#Option to modify, up/down, delete entries

#File explorer view
Double click on entry to add to table. By default count = 1.

# Save of a dpro file result in genration of 2 files -> .dpro(abstract info) and .bpro(full information for load view)

# .dpro

<design>
    <head>
    <name> </name>
    <xxx>
    </head>
    <body>
        <dfield>
                  <dfsname></dfsname>        
                  <dfname></dfname>
                  <dfcount>1</dfcount>
                  <dfdesc></dfdesc>
                  <dfrelativepath></dfrelativepath>
        </dfield>
    
    </body>

</design>

#bpro will have explorer of simple fields (if array then also need to see how to set)

#utils function body from prototype. just copy entire .h file and generate function definitions
#utils auto add #define just take  name and value and create macros
#utils auto add comments to function prototypes based on params. Very handy
#utils auto create enums just take enum strings. comment section and typedef auto added.
#utils in fsm generator add option to generate switch case or if else.


