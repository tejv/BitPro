BitPro

# Use extension to differentiate between file types. spro = simple, cpro = complex, dpro = design complex pro 

# Save of a dpro file result in genration of 2 files -> .dpro(abstract info) and .bpro(full information for load view)

#bpro will have explorer of simple fields (if array then also need to see how to set)
#temp file will have all information so that user can modify from tmp file itself. Use delimiters to provide all info.
#cpro view have explorer of simple xml + value also editable. 
#cpro what about structure inside a structure. i.e cpro inside a cpro.


#utils auto add #define , prefix , just take  name and value and create macros with proper alignment.
#auto matic generate word file for all function prototypes with tabular view. Or just use doxygen.

#loading a cpro make sure each field has unique ID
# adress of each field need to be shown, offset also - address/offset.
#@ID to load address of a field.

#Whenever dpro is saved make sure to generate corresponding cpro as well is updated.

#Now for loading and chnaging values -> Its better that every simple element has a "user_val" field by default = 0
On load create a copy of original cpro file into .cprotmp. Then load a treeview with all relavant info.
Each time a simple field is changed just change the user value. 
Same cprotmp file can be used to generate final cyacd or config.c. 



